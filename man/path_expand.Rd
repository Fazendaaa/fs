% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/path.R
\name{path_expand}
\alias{path_expand}
\alias{path_home}
\title{Finding Users Home Directory}
\usage{
path_expand(path)

path_home(...)
}
\arguments{
\item{...}{Additional paths appended to the home directory by \code{path()}.}
}
\description{
\itemize{
\item \code{path_expand()} performs tilde expansion on a path, replacing instances of
\code{~} or \code{~user} with the user's home directory.
\item \code{path_home()} constructs a path within the expanded users home directory
}
}
\details{
\code{\link[=path_expand]{path_expand()}} Differs from \code{\link[=path.expand]{path.expand()}} in the interpretation of the
home directory of Windows. In particular \code{path_expand()} uses the path set
in \code{USERPROFILE}, if unset then \code{HOMEDRIVE}/\code{HOMEPATH} is used.

In contrast \code{\link[=path.expand]{path.expand()}} first checks for \code{R_USER} then \code{HOME}, which in the default
configuration of R on Windows are both set to the users document directory, e.g.
\code{C:\\Users\\username\\Documents}. \code{path.expand()} also does not support
\code{~otheruser} syntax on Windows, whereas \code{path_expand()} does support this
syntax on all systems.

This definition makes fs more consistent with the definition of home directory used
on Windows in other languages, such as
\href{https://docs.python.org/3/library/os.path.html#os.path.expanduser}{python}
and \href{https://doc.rust-lang.org/std/env/fn.home_dir.html#windows}{rust}.

Users can set the \code{R_FS_HOME} environment variable to override the
definitions on any platform.
}
\examples{
# Make fs home equivalent to R definition of home
\dontrun{
Sys.setenv("R_FS_HOME" = Sys.getenv("R_USER"))
path_expand("~")
}
path_home()
path_home("R")
}
\seealso{
\href{https://cran.r-project.org/bin/windows/base/rw-FAQ.html#What-are-HOME-and-working-directories_003f}{R for Windows FAQ - 2.14}
for behavior of \code{\link[base:path.expand]{base::path.expand()}}.
}
